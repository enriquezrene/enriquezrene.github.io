<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-01-03T05:35:39-05:00</updated><id>http://localhost:4000/</id><title type="html">Blog Enriquez Rene</title><subtitle></subtitle><entry><title type="html">CQRS!</title><link href="http://localhost:4000/martin/fowler/2018/01/03/cqrs.html" rel="alternate" type="text/html" title="CQRS!" /><published>2018-01-03T05:00:00-05:00</published><updated>2018-01-03T05:00:00-05:00</updated><id>http://localhost:4000/martin/fowler/2018/01/03/cqrs</id><content type="html" xml:base="http://localhost:4000/martin/fowler/2018/01/03/cqrs.html">&lt;p&gt;&lt;strong&gt;CQRS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CQRS se entiende por Command Query Responsibility Segregation (Segregacion de responsabilidad en comandos de consulta).
Es un patron que la lo escuche por primera vez descrito por Greg Young. 
Su motivacion es la nocion de que puedes usar un modelo diferente para actualizar informacion al utilizado para leerla.
Para algunas situaciones, esta separacion podria ser valiosa, pero hay que tener en cuenta que para la mayoria de sistemas
CQRS agrega complejidad muy riesgosa.&lt;/p&gt;

&lt;p&gt;El principal enfoque utilizado por las personas para interactuar con un sistema de informacion
es tratarla como un almacen de datos CRUD. Con esto quiero decir que tenemos un modelo mental de alguna 
estructura de registros en donde podemos &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt;rear nuevos registros, &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;ead (leer) registros, &lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt;pdate (actualizar) registros existentes,
y &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;elete (borrar) registros cuando no los necesitamos. En el caso mas simple, nuestras
interacciones no son mas que almacenar y recibir estos registros.&lt;/p&gt;

&lt;p&gt;Cuando nuestras necesidades llegan a ser mas sofisticadas sensatamente nos movemos
lejos de ese modelo. Podriamos desear ver la informacion de una forma diferente al 
almacen de datos, quiza comprimiendo un conjunto de registros dentro de uno solo, o
formando registros virtualmente combinando informacion de diferentes lugares. En
el lugar en donde se actualiza la informacion podriamos encontrar reglas de validacion
que solamente permiten que ciertas combinaciones de datos sean guardadas,  incluso
se podria inferir cierta data para que sea almacenada que es diferente a la provista.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://martinfowler.com/bliki/images/cqrs/single-model.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cuando esto sucede empezamos a ver diferentes representaciones de informacion. Cuando los usuarios
interactuan con la informacion ellos usan varias representacion de esta informacion.
Los desarrolladores usualmente construyen su propio modelo conceptual el cual usan
para manipular los elementos core del modelo. Si estas usando un modelo de dominio,
entonces esta es usualmente la representacion conceptual del dominio. Tu usualmente
tambien creas el almacen persistente tan similar al modelo conceptual como se pueda.&lt;/p&gt;

&lt;p&gt;Esta estructura de representacion de multiples capas puede ser muy compleja, pero cuando
la gente hace esto, ellos aun lo resuelven como una unica representacion conceptual
la cual actua como un punto de integracion conceptual entre todas las presentaciones.&lt;/p&gt;

&lt;p&gt;El cambio que CQRS presenta es partir ese modelo conceptual dentro de modelos separados
para actualizar y mostrar datos, lo cual es referido como Comando (Command) y Consulta (Query)
respectivamente siguiendo el vocabulario de &lt;a href=&quot;https://martinfowler.com/bliki/CommandQuerySeparation.html&quot;&gt;CommandQuerySeparation&lt;/a&gt;.
Lo racional es que para varios problemas, particularmente en los dominios mas complejos,
tener el mismo modelo conceptual para comandos y consultas nos lleva a un modelo mas
complejo el cual tampoco esta bien.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://martinfowler.com/bliki/images/cqrs/cqrs.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por modelos separados comunmente queremos decir modelos de objetos distintos,
probablemente corriendo en diferentes procesos logicos, quiza sobre 
hardware separado.
Un ejemplo en la web podria ser un usuario que mira una pagina web que es
renderizada usando un modelo de consulta. Si ellos inician un cambio ese cambio
es ruteado a un modelo de comandos separado para su procesamiento, el cambio
resultante es comunicado al modelo de consulta para renderizar el estado actualizado.&lt;/p&gt;

&lt;p&gt;Hay espacion para variaciones considerables aqui. Los modelos en memoria
podrian compartir la misma base de datos, en cuyo caso la base de datos actua
como el medio de comunicacion entre ambos modelos. Sin embargo, ellos podrian
usar bases de datos separadas, efectivamente crear la base de datos para consultas
dentro de una &lt;a href=&quot;https://martinfowler.com/bliki/ReportingDatabase.html&quot;&gt;base de datos de reportes en tiempo real&lt;/a&gt;
En este caso hay la necesidad de teneder algunos mecanismos de comunicacion 
entre ambos modelos de sus bases de datos.&lt;/p&gt;

&lt;p&gt;Los dos modelos podrian no ser modelos de objetos separados, 
podrian ser los mismos objetos con diferentes interfaces que son usadas
de forma separada cuando el objeto es usado para enviar un comando u otra para
cuando es usado para consultas, algo similar a las vistas en las bases
de datos relacionales. Pero normalmente cuando escucho CQRS, ellos son modelos claramente separados.&lt;/p&gt;

&lt;p&gt;CQRS naturalmente encaja con otros patrones de arquitectura.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A medida que nos alejamos de una única representación 
con la que interactuamos mediante CRUD, 
podemos pasar fácilmente a una UI basada en tareas.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CQRS se adapta bien a los modelos de programación basados en eventos. 
Es común ver que el sistema CQRS se divida en servicios separados 
que se comunican con []Event Collaboration](https://martinfowler.com/eaaDev/EventCollaboration.html). 
Esto permite que estos servicios aprovechen fácilmente &lt;a href=&quot;https://martinfowler.com/eaaDev/EventSourcing.html&quot;&gt;Event Sourcing&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tener modelos separados plantea preguntas sobre la dificultad para mantener 
esos modelos consistentes, lo que aumenta la probabilidad de usar 
consistencia eventual.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Para muchos dominios, gran parte de la lógica es necesaria 
cuando está actualizando, por lo que puede tener sentido 
utilizar &lt;a href=&quot;https://martinfowler.com/bliki/EagerReadDerivation.html&quot;&gt;EagerReadDerivation&lt;/a&gt; para simplificar sus modelos de consulta.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Si el modelo de escritura genera eventos para todas las actualizaciones, 
se puede estructurar los modelos de lectura como EventPosters, 
lo que les permite ser imágenes de memoria y así evitar muchas 
interacciones con la base de datos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CQRS es adecuado para dominios complejos, 
el tipo que también se beneficia del diseño dirigido por dominio.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cuando usarlo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Al igual que cualquier patrón, CQRS es útil en algunos lugares, 
pero no en otros. Muchos sistemas se ajustan a un modelo mental CRUD, 
por lo que deben hacerse de ese modo. 
CQRS es un salto mental significativo para todos los interesados, 
por lo que no debe abordarse a menos que el beneficio valga la pena hacer el salto. 
Si bien he encontrado uso exitosos de CQRS, 
hasta ahora la mayoría de los casos que he encontrado no han sido tan buenos, 
con CQRS  he visto una fuerza significativa que pone un sistema 
de software en serias dificultades.&lt;/p&gt;

&lt;p&gt;En particular, CQRS solo debe usarse en partes específicas de un sistema 
(un BoundedContext en DDD) y no en el sistema como un todo. 
Con esta forma de pensar, cada contexto delimitado 
necesita sus propias decisiones sobre cómo se debe modelar.&lt;/p&gt;

&lt;p&gt;Hasta ahora he visto beneficios en dos direcciones. 
En primer lugar, es posible que algunos dominios complejos 
sean más fáciles de abordar mediante el uso de CQRS. 
Sin embargo, debo enfatizar que tal idoneidad para CQRS es en gran 
medida el caso de minoría. 
Por lo general, hay suficiente superposición entre el comando y l
os lados de la consulta que compartir un modelo es más fácil. 
Usar CQRS en un dominio que no concuerda agregará complejidad, 
reduciendo la productividad y aumentando el riesgo.&lt;/p&gt;

&lt;p&gt;El otro beneficio principal es en el manejo de aplicaciones de alto rendimiento.
CQRS permite separar la carga de lectura y escritura 
permitiéndo escalar cada una de manera independiente. 
Si tu aplicación ve una gran disparidad entre lecturas y escrituras, 
esto es muy útil. Incluso sin eso, 
se puede aplicar diferentes estrategias de optimización a los dos lados. 
Un ejemplo de esto es el uso de diferentes técnicas de acceso a la 
base de datos para leer y actualizar.&lt;/p&gt;

&lt;p&gt;Si tu dominio no es adecuado para CQRS, 
pero tiene consultas exigentes que agregan complejidad o 
problemas de rendimiento, recuerde que aún puede usar una 
Base de datos de reportes. CQRS usa un modelo separado para todas l
as consultas. Con una base de datos de reportes, 
aun necesitas tu sistema principal para la mayoría de consultas, 
pero descargas las más exigentes a la base de datos de reportes.&lt;/p&gt;

&lt;p&gt;A pesar de estos beneficios, se debe tener mucho cuidado con el uso de CQRS. 
Muchos sistemas de información se ajustan bien a la noción 
de una base de información que se actualiza de la misma manera que se lee, 
agregar CQRS a dicho sistema puede agregar complejidad significativa. 
Ciertamente he visto casos en los que se agrega una complejidad
que afecta de forma significativa la productividad, 
añadiendo una cantidad injustificada de riesgo al proyecto, 
incluso en manos de un equipo capaz. Por lo que aun cuando 
CQRS es un patrón que es bueno tenerlo en la caja de herramientas, 
ten en cuenta que es difícil usarlo bien 
y puede fácilmente romper piezas importantes si lo usas mal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Otras lecturas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Greg Young fue la primera persona a la que escuche hablar acerca de este enfoque - &lt;a href=&quot;http://codebetter.com/gregyoung/2010/02/16/cqrs-task-based-uis-event-sourcing-agh/&quot;&gt;este es su resumen&lt;/a&gt; que a mi es el que mas me agrada&lt;/li&gt;
  &lt;li&gt;Udi Dahan es otro defensor de CQRS, el tiene una &lt;a href=&quot;http://udidahan.com/2009/12/09/clarified-cqrs/&quot;&gt;descripcion detallada de esta tecnica&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Hay una &lt;a href=&quot;https://groups.google.com/forum/#!forum/dddcqrs&quot;&gt;lista de correo&lt;/a&gt; para discutir este enfoque.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">CQRS</summary></entry><entry><title type="html">Playing around with Docker</title><link href="http://localhost:4000/docker/2017/11/07/playing-around-with-docker.html" rel="alternate" type="text/html" title="Playing around with Docker" /><published>2017-11-07T22:20:00-05:00</published><updated>2017-11-07T22:20:00-05:00</updated><id>http://localhost:4000/docker/2017/11/07/playing-around-with-docker</id><content type="html" xml:base="http://localhost:4000/docker/2017/11/07/playing-around-with-docker.html">&lt;p&gt;Now that you have ran your &lt;em&gt;Hello World&lt;/em&gt; app with Docker, you’re ready to go for more.&lt;/p&gt;

&lt;p&gt;We said Docker can use any linux distribution that we want, now the question is:&lt;/p&gt;

&lt;p&gt;How can I do that?&lt;/p&gt;

&lt;p&gt;In Docker we have a public repo of docker images that we can use to run our apps.
Let’s say that you want to use a docker container with CentOS, for it you can type in your terminal:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker search centos
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and you’ll have an output like this:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NAME                               DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
centos                             The official build of CentOS.                   3789                &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OK]                
ansible/centos7-ansible            Ansible on Centos7                              103                                     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OK]
jdeathe/centos-ssh                 CentOS-6 6.9 x86_64 / CentOS-7 7.4.1708 x8...   89                                      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OK]
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This command basically allow us to search existing docker images that we can use.&lt;/p&gt;

&lt;h1 id=&quot;running-docker-images&quot;&gt;Running docker images&lt;/h1&gt;

&lt;h2 id=&quot;docker-run&quot;&gt;docker run&lt;/h2&gt;
&lt;p&gt;Once you found the image that you are looking for (let’s say &lt;strong&gt;centos&lt;/strong&gt;) we need to use the &lt;em&gt;run&lt;/em&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run centos
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This command will download the image from the internet to our host and then run the container.
The container running on the host is what docker calls, an instance.&lt;/p&gt;

&lt;h2 id=&quot;docker-ps&quot;&gt;docker ps&lt;/h2&gt;
&lt;p&gt;Once you ran a container, it will execute whatever process that you have specified inside it and then it finishes.
Since we did not configure any process to run inside the container, the instance should be finished. 
To know what instances have ran in your host you can type the following command:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
  CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
  651fb5f3300b        centos              &lt;span class=&quot;s2&quot;&gt;&quot;/bin/bash&quot;&lt;/span&gt;         14 seconds ago      Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 12 seconds ago                       musing_hoover
  810ad3c9ffe7        hello-world         &lt;span class=&quot;s2&quot;&gt;&quot;/hello&quot;&lt;/span&gt;            47 seconds ago      Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 46 seconds ago                       objective_hawking
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;-a&lt;/strong&gt; flag is used to query the instances that are running and also those instances that have finished.
If you are interested only in the running instances just ignore the &lt;strong&gt;-a&lt;/strong&gt; argument.&lt;/p&gt;

&lt;p&gt;The command is currently listing two instances with an &lt;em&gt;Exited&lt;/em&gt; status, which means they are no longer running.&lt;/p&gt;

&lt;h2 id=&quot;docker-rm&quot;&gt;docker rm&lt;/h2&gt;
&lt;p&gt;This command allows you to remove the instances that you no longer need.&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker rm 651fb5f3300b
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
  CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES  
  810ad3c9ffe7        hello-world         &lt;span class=&quot;s2&quot;&gt;&quot;/hello&quot;&lt;/span&gt;            47 seconds ago      Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 46 seconds ago                       objective_hawking
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-images&quot;&gt;docker images&lt;/h2&gt;
&lt;p&gt;It’s helpful to check which images you have downloaded and are available locally:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
hello-world         latest              725dcfab7d63        4 days ago          1.84kB
centos              latest              d123f4e55e12        4 days ago          197MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-rmi&quot;&gt;docker rmi&lt;/h2&gt;
&lt;p&gt;If you want to remove a local image, use this command of this way:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# docker rmi &amp;lt;image_id&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker rmi 725dcfab7d63
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
centos              latest              d123f4e55e12        4 days ago          197MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the next post I’m going to explain you about what the &lt;strong&gt;Dockerfile&lt;/strong&gt; is and how you can use it.&lt;/p&gt;

&lt;p&gt;If you liked this post, you can pay me with a click on the ads :sweat_smile: :v:&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;!-- inferior --&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:inline-block;width:728px;height:90px&quot; data-ad-client=&quot;ca-pub-5428825449848403&quot; data-ad-slot=&quot;1328012179&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Now that you have ran your Hello World app with Docker, you’re ready to go for more.</summary></entry><entry><title type="html">Installing Docker</title><link href="http://localhost:4000/docker/2017/11/06/installing-docker.html" rel="alternate" type="text/html" title="Installing Docker" /><published>2017-11-06T22:23:00-05:00</published><updated>2017-11-06T22:23:00-05:00</updated><id>http://localhost:4000/docker/2017/11/06/installing-docker</id><content type="html" xml:base="http://localhost:4000/docker/2017/11/06/installing-docker.html">&lt;p&gt;In this post, I’m going to show you how to install Docker on Ubuntu 17.10&lt;/p&gt;

&lt;p&gt;Old linux distributions used to include the program &lt;em&gt;docker&lt;/em&gt;, &lt;em&gt;docker.io&lt;/em&gt; and &lt;em&gt;docker-engine&lt;/em&gt; as part of a fresh installation.
Those programs are really old, if you have them, please ensure to first remove them of this way:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get remove docker docker-engine docker.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s add the required repos and install docker-ce (community edition) on our PC with the following commands:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install apt-transport-https ca-certificates curl software-properties-common
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://download.docker.com/linux/ubuntu/gpg | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-key add -
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;add-apt-repository &lt;span class=&quot;s2&quot;&gt;&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu zesty stable&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install docker-ce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to verify if the installation was successful, run the following command:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will see something like this:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;﻿Docker version 17.09.0-ce, build afdb6d4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;hello-world&quot;&gt;Hello World&lt;/h1&gt;
&lt;p&gt;I know we all love &lt;em&gt;Hello World&lt;/em&gt; examples and that’s why we are going to run a &lt;em&gt;Hello World&lt;/em&gt; using our
fresh Docker installation.&lt;/p&gt;

&lt;p&gt;For this, let’s type in your terminal the next command:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You’ll have an output like this:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;﻿&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run hello-world
Unable to find image &lt;span class=&quot;s1&quot;&gt;'hello-world:latest'&lt;/span&gt; locally
latest: Pulling from library/hello-world
9a0669468bf7: Pull &lt;span class=&quot;nb&quot;&gt;complete 
&lt;/span&gt;Digest: sha256:0e06ef5e1945a718b02a8c319e15bae44f47039005530bc617a5d071190ed3fc
Status: Downloaded newer image &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the &lt;span class=&quot;s2&quot;&gt;&quot;hello-world&quot;&lt;/span&gt; image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://cloud.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yay!!! It means, Docker was successfully installed and now you are ready to go ahead with the rest of the posts.&lt;/p&gt;

&lt;p&gt;If you liked this post, you can pay me with a click on the ads :sweat_smile: :v:&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;!-- inferior --&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:inline-block;width:728px;height:90px&quot; data-ad-client=&quot;ca-pub-5428825449848403&quot; data-ad-slot=&quot;1328012179&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">In this post, I’m going to show you how to install Docker on Ubuntu 17.10</summary></entry><entry><title type="html">Brief Overview</title><link href="http://localhost:4000/docker/2017/11/05/brief-overview.html" rel="alternate" type="text/html" title="Brief Overview" /><published>2017-11-05T22:21:00-05:00</published><updated>2017-11-05T22:21:00-05:00</updated><id>http://localhost:4000/docker/2017/11/05/brief-overview</id><content type="html" xml:base="http://localhost:4000/docker/2017/11/05/brief-overview.html">&lt;p&gt;Docker is one of the most used terms when you hear people talking about deployments, continuous integration, testing, DevOps, etc.&lt;/p&gt;

&lt;p&gt;I have been working with this technology for a while and I decided to write a little bit about my experience with it. Let’s start understanding what Docker is.&lt;/p&gt;

&lt;h1 id=&quot;background&quot;&gt;Background&lt;/h1&gt;
&lt;p&gt;At the beginning we used to buy powerful servers in order to deploy our applications. Often these servers used to be under-used.
Probably they were used at the half of their maximum capacity in the best cases.&lt;/p&gt;

&lt;p&gt;One of the worst things that used to happened us was related to have many services running on a physical server. 
So if we needed to restart for some reason, all those services were down while the server was being started, this is too bad.&lt;/p&gt;

&lt;p&gt;On the other hand, keep the services isolated is one of the best practices to deal with these problems, but of course, buy one server per service is not a smart idea at all, and that’s why Virtual Machines (VMs) raised.&lt;/p&gt;

&lt;p&gt;Using VMs, we can have many services running on a single host and all of them are isolated one each other. 
So if you need to restart one service, you only need to restart that VM and that’s it.&lt;/p&gt;

&lt;h1 id=&quot;whats-wrong-with-vms&quot;&gt;What’s wrong with VMs?&lt;/h1&gt;
&lt;p&gt;There is nothing wrong with them but the unique bad stuff is they need the full blown OS to work and as we know, each OS consumes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RAM&lt;/li&gt;
  &lt;li&gt;Hard disk&lt;/li&gt;
  &lt;li&gt;CPU&lt;/li&gt;
  &lt;li&gt;OS Licenses (like Windows and other OS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;now-we-have-docker&quot;&gt;Now we have Docker&lt;/h1&gt;
&lt;p&gt;Keeping in mind those issues a new (not really new) solution was created and now we have containers. 
Docker is one of them, in a nutshell a container is like a VM that re-use the host’s kernel and because of that you have allowed to run any Linux distribution as a docker instance on your Linux docker host. Of course, the same it’s true for Windows.&lt;/p&gt;

&lt;p&gt;Let’s review two basic concepts:&lt;/p&gt;

&lt;h3 id=&quot;docker-host&quot;&gt;Docker host&lt;/h3&gt;
&lt;p&gt;This is your physical server, nowadays it’s pretty common an EC2 instance running on AWS.&lt;/p&gt;

&lt;h3 id=&quot;docker-image&quot;&gt;Docker image&lt;/h3&gt;
&lt;p&gt;It is composed of the OS of your choice, and the services that you want running inside it.&lt;/p&gt;

&lt;p&gt;For example, if you have installed Ubuntu in your host machine, you can run on it CentOS, RedHat, Debian or whatever other linux distribution.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A good practice is to run only one service inside a docker image.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In order to understand better how Docker can be used, let’s say that you want to run an application that is composed by a MySQL database and some code written in Java.&lt;/p&gt;

&lt;p&gt;With this idea in mind, we will need two docker images, and each one of them can have a different OS, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Image 1: Ubuntu 14.04, Java 8&lt;/li&gt;
  &lt;li&gt;Image 2: CentOS 5, MySQL 5.x&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course we can use Ubuntu or any other distro for all the images, but I’m choosing two different OS just to make it clear.
Once you have your images you can run them, an image running is what we call an instance, so you’ll have two docker instances running.&lt;/p&gt;

&lt;p&gt;And each one of them will be absolutely isolated and re-using the host kernel. Of this way, if we want to restart the database server,
we will only need to restart the Image 2 and the Image 1 and the docker host will keep working without any problems.&lt;/p&gt;

&lt;p&gt;In the next posts, I’m going to show you how to create your own docker images and how to run applications/services inside of them.&lt;/p&gt;

&lt;p&gt;If you liked this post, you can pay me with a click on the ads :sweat_smile: :v:&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;!-- inferior --&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:inline-block;width:728px;height:90px&quot; data-ad-client=&quot;ca-pub-5428825449848403&quot; data-ad-slot=&quot;1328012179&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Docker is one of the most used terms when you hear people talking about deployments, continuous integration, testing, DevOps, etc.</summary></entry><entry><title type="html">Refactoring, a First Example</title><link href="http://localhost:4000/refactoring/2017/09/27/a-first-example.html" rel="alternate" type="text/html" title="Refactoring, a First Example" /><published>2017-09-27T21:34:00-05:00</published><updated>2017-09-27T21:34:00-05:00</updated><id>http://localhost:4000/refactoring/2017/09/27/a-first-example</id><content type="html" xml:base="http://localhost:4000/refactoring/2017/09/27/a-first-example.html">&lt;h1 id=&quot;refactoring-improving-the-design-of-existing-code&quot;&gt;Refactoring, Improving the Design of Existing Code&lt;/h1&gt;

&lt;h2 id=&quot;chapter-01-refactoring-a-first-example&quot;&gt;Chapter 01: Refactoring, a First Example&lt;/h2&gt;

&lt;p&gt;When you find you have to add a feature to a program, and the program’s code is not structured in a convenient way to add the feature, first refactor the program to make it easy to add the feature, then add the feature.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write test to ensure you’re not breaking the existing code.&lt;/li&gt;
  &lt;li&gt;Split big methods in small ones in order to make them more manageable.&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">Refactoring, Improving the Design of Existing Code</summary></entry><entry><title type="html">Introduction</title><link href="http://localhost:4000/refactoring/2017/09/27/introduction.html" rel="alternate" type="text/html" title="Introduction" /><published>2017-09-27T21:30:00-05:00</published><updated>2017-09-27T21:30:00-05:00</updated><id>http://localhost:4000/refactoring/2017/09/27/introduction</id><content type="html" xml:base="http://localhost:4000/refactoring/2017/09/27/introduction.html">&lt;h1 id=&quot;refactoring-improving-the-design-of-existing-code&quot;&gt;Refactoring, Improving the Design of Existing Code&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This is a series of articles with small summaries about the book “Refactoring, Improving the Design of Existing Code” by Kent Beck and Martin Fowler.&lt;/p&gt;

&lt;p&gt;I’ll put here the links to GitHub containing the code examples.&lt;/p&gt;

&lt;p&gt;I hope you like it and find it useful.&lt;/p&gt;</content><author><name></name></author><summary type="html">Refactoring, Improving the Design of Existing Code</summary></entry><entry><title type="html">Getting Started</title><link href="http://localhost:4000/growing-object-oriented-software/2017/04/25/whats-the-point-of-tdd.html" rel="alternate" type="text/html" title="Getting Started" /><published>2017-04-25T14:53:00-05:00</published><updated>2017-04-25T14:53:00-05:00</updated><id>http://localhost:4000/growing-object-oriented-software/2017/04/25/whats-the-point-of-tdd</id><content type="html" xml:base="http://localhost:4000/growing-object-oriented-software/2017/04/25/whats-the-point-of-tdd.html">&lt;p&gt;This post contains a summary about the first Chapter of the book.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Growing Object Oriented Software, Guided by Tests &lt;br /&gt;
By Steve Freeman and Nat Pryce.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When we are creating software we have to bear in mind that feedback cycles at every level of development are quite important. We are going to mention some of them:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pair programming&lt;/li&gt;
  &lt;li&gt;Unit tests&lt;/li&gt;
  &lt;li&gt;Acceptance tests&lt;/li&gt;
  &lt;li&gt;Daily meetings&lt;/li&gt;
  &lt;li&gt;Iterations&lt;/li&gt;
  &lt;li&gt;Releases, and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-is-the-point-of-test-driven-development&quot;&gt;What Is the Point of Test-Driven Development?&lt;/h1&gt;
&lt;p&gt;Feedback is the matter of TDD. Each cycle should expose the team for receiving feedback and correct any misconception&lt;/p&gt;

&lt;h2 id=&quot;supporting-changes&quot;&gt;Supporting Changes&lt;/h2&gt;
&lt;p&gt;Testing is helpful for catching errors on regressions and gives us confidence for modifying the existing code.&lt;/p&gt;

&lt;p&gt;The code should follow the &lt;a href=&quot;https://en.wikipedia.org/wiki/KISS_principle&quot;&gt;KISS principle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apply TDD for everything and follow the golden rule “Never write new functionality without a failing test.”&lt;/p&gt;

&lt;p&gt;After implement a new feature, we need an Acceptance Test&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Write a failing acceptance test&lt;/strong&gt;, then:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;(1) write failing unit test&lt;/td&gt;
        &lt;td&gt;(2) make the test pass&lt;/td&gt;
        &lt;td&gt;(3) refactor -&amp;gt; Go to step (1)&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;!-- inferior --&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:inline-block;width:728px;height:90px&quot; data-ad-client=&quot;ca-pub-5428825449848403&quot; data-ad-slot=&quot;1328012179&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Failing unit tests should never be committed to the source repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;acceptance-test&quot;&gt;Acceptance Test&lt;/h2&gt;
&lt;p&gt;Usually end-to-end tests, it interacts with the system from the outside without directly calling its internal code.&lt;/p&gt;

&lt;h2 id=&quot;levels-of-testing&quot;&gt;Levels of Testing&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Acceptance&lt;/strong&gt;: Does the whole system work?&lt;br /&gt;
&lt;strong&gt;Integration&lt;/strong&gt;: Does our code work against code we can’t change?&lt;br /&gt;
&lt;strong&gt;Unit&lt;/strong&gt;: Do our objects do the right thing, are they convenient to work with?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;external-and-internal-quality&quot;&gt;External and Internal Quality&lt;/h2&gt;
&lt;p&gt;Internal quality is directly proportional to the amount of feedback received.&lt;/p&gt;

&lt;p&gt;External quality is directly proportional to the tests you have done:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;unit-&amp;gt;integration-&amp;gt;end-to-end.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On unit-test, the class must have explicit dependencies that can easily be substituted and clear responsibilities that can easily be invoked and verified. It provides valuable and immediate feedback about our design.
Features with “high” coherence are easier to maintain. Imagine a machine to wash clothes and dishes (crazy and untestable).&lt;/p&gt;

&lt;p&gt;If you like this post please pay me with a click on the ads :)&lt;/p&gt;

&lt;p&gt;If you have any questions about this summary, feel free to send me an email and we can discuss anything more in deep.&lt;/p&gt;

&lt;p&gt;Don’t forget to subscribe us using the link at the right-upper corner to receive next posts&lt;/p&gt;</content><author><name></name></author><summary type="html">This post contains a summary about the first Chapter of the book. Growing Object Oriented Software, Guided by Tests By Steve Freeman and Nat Pryce.</summary></entry><entry><title type="html">Background</title><link href="http://localhost:4000/growing-object-oriented-software/2017/04/25/introduction.html" rel="alternate" type="text/html" title="Background" /><published>2017-04-25T14:45:00-05:00</published><updated>2017-04-25T14:45:00-05:00</updated><id>http://localhost:4000/growing-object-oriented-software/2017/04/25/introduction</id><content type="html" xml:base="http://localhost:4000/growing-object-oriented-software/2017/04/25/introduction.html">&lt;p&gt;From now on, I’m gonna write a series of posts that summarizes the main ideas from the book:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Growing Object Oriented Software, Guided by Tests 
By Steve Freeman and Nat Pryce.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is an awesome book recommended by rock stars in Software Development like &lt;a href=&quot;https://martinfowler.com/&quot;&gt;Martin Fowler&lt;/a&gt;, &lt;a href=&quot;http://www.yegor256.com/&quot;&gt;Yegor Bugayenko&lt;/a&gt; among others.&lt;/p&gt;

&lt;p&gt;I’m pretty sure you will enjoy the journey as much as I did. If you have any questions about my summaries, feel free to send me an email and we can discuss anything more in deep.&lt;/p&gt;

&lt;div class=&quot;PageNavigation&quot;&gt;

    &lt;a class=&quot;next&quot; href=&quot;/growing-object-oriented-software/2017/04/25/whats-the-point-of-tdd.html&quot;&gt;Getting Started &amp;raquo;&lt;/a&gt;

&lt;/div&gt;</content><author><name></name></author><summary type="html">From now on, I’m gonna write a series of posts that summarizes the main ideas from the book:</summary></entry><entry><title type="html">Subscription Success</title><link href="http://localhost:4000/subscription/2017/04/24/subscription-ok.html" rel="alternate" type="text/html" title="Subscription Success" /><published>2017-04-24T08:08:00-05:00</published><updated>2017-04-24T08:08:00-05:00</updated><id>http://localhost:4000/subscription/2017/04/24/subscription-ok</id><content type="html" xml:base="http://localhost:4000/subscription/2017/04/24/subscription-ok.html">&lt;h1 id=&quot;welcome-to-geektown&quot;&gt;Welcome to GeekTown&lt;/h1&gt;

&lt;p&gt;Now you are part of our community, we are so glad to have you here.&lt;/p&gt;

&lt;p&gt;Please, don’t forget to pay us with a click on the ads if you enjoy this site.&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;!-- inferior --&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:inline-block;width:728px;height:90px&quot; data-ad-client=&quot;ca-pub-5428825449848403&quot; data-ad-slot=&quot;1328012179&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Welcome to GeekTown</summary></entry><entry><title type="html">Becoming an expert</title><link href="http://localhost:4000/regex/2017/04/17/becoming-an-expert.html" rel="alternate" type="text/html" title="Becoming an expert" /><published>2017-04-17T16:34:00-05:00</published><updated>2017-04-17T16:34:00-05:00</updated><id>http://localhost:4000/regex/2017/04/17/becoming-an-expert</id><content type="html" xml:base="http://localhost:4000/regex/2017/04/17/becoming-an-expert.html">&lt;h1 id=&quot;lets-work-hard&quot;&gt;Let’s work hard&lt;/h1&gt;
&lt;p&gt;We are going to extract coordinates from a string like this&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;COORDINATES&lt;span class=&quot;o&quot;&gt;(((&lt;/span&gt;1 2,3 4&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;5 6,7 8,9 10&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The desired output will be:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;1 2, 3 4&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;5 6,7 8,9 10&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, the expression for finding these values will be:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Po&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(\(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0-9]{1,}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{1}[0-9]{1,}(?:,[0-9]{1,}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{1}[0-9]{1,}){1,}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\)\)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; file.txt
&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;1 2,3 4&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;5 6,7 8,9 10&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;OMG, what it is? Let’s breath and understand what we did&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;se&quot;&gt;\(\(&lt;/span&gt;            : two parenthesis opening the expression, since &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; is a metacharacter we need to scape them using &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0-9]&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1,&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;       : 1 or more numbers from 0 to 9
&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;           : a blank space
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;?:REGEX&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;1,&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;   : 1 or more expressions &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;REGEX is the same that openning expression explained above, quite simple!!! &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;\)\)&lt;/span&gt;            : two parenthesis closing the expression, since &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is a metacharacter we need to scape them using &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;!-- inferior --&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:inline-block;width:728px;height:90px&quot; data-ad-client=&quot;ca-pub-5428825449848403&quot; data-ad-slot=&quot;1328012179&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Now, we are going to make it a little bit difficult, let’s say numbers expressing the coordinates can be signal decimals like: -4.875 or 9.669
Let’s use this string:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;COORDINATES&lt;span class=&quot;o&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-102&lt;/span&gt;.084546466 26.45688853338312,-102.1490725018084 26.13520439439342,-102.15047246071138 26.1264975143505,-102.14981952668641 26.1384657784035,-102.12671666102124 26.149049533554354,-102.1188178 26.152923456807,-102.10091893897877 26.149049533554354,-102.0878160633126 26.1384657784035,-102.08653386170432 26.13460053338312&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-102&lt;/span&gt;.15271126918533 26.129748541924556,-102.14764154329896 26.12984171790165,-102.14755705371499 26.13408877990621,-102.14815585687757 26.13514319847587,-102.13090187683702 26.13494986238747,-102.10652676348738 26.13471792646315,-102.0865197014023 26.13455784661961,-102.08302007795753 26.1240081,-102.0878160633126 26.109550421596495,-102.10091893897877 26.09896666644564,-102.1188178 26.09509274319299,-102.12671666102124 26.09896666644564,-102.14981952668641 26.109550421596495,-102.15461552204248 26.1240081,-102.15271126918533 26.129748541924556&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The desired output will be:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-102&lt;/span&gt;.084546466 26.45688853338312,-102.1490725018084 26.13520439439342,-102.15047246071138 26.1264975143505,-102.14981952668641 26.1384657784035,-102.12671666102124 26.149049533554354,-102.1188178 26.152923456807,-102.10091893897877 26.149049533554354,-102.0878160633126 26.1384657784035,-102.08653386170432 26.13460053338312&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-102&lt;/span&gt;.15271126918533 26.129748541924556,-102.14764154329896 26.12984171790165,-102.14755705371499 26.13408877990621,-102.14815585687757 26.13514319847587,-102.13090187683702 26.13494986238747,-102.10652676348738 26.13471792646315,-102.0865197014023 26.13455784661961,-102.08302007795753 26.1240081,-102.0878160633126 26.109550421596495,-102.10091893897877 26.09896666644564,-102.1188178 26.09509274319299,-102.12671666102124 26.09896666644564,-102.14981952668641 26.109550421596495,-102.15461552204248 26.1240081,-102.15271126918533 26.129748541924556&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, the expression for finding these values will be:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Po&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(\(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[-+]?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;+(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;+)?&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{1}[-+]?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;+(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;+)?&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;(?:,[-+]?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;+(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;+)?&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;{1}[-+]?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;+(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;+)?&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;){1,}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\)\)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; file.txt
&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-102&lt;/span&gt;.084546466 26.45688853338312,-102.1490725018084 26.13520439439342,-102.15047246071138 26.1264975143505,-102.14981952668641 26.1384657784035,-102.12671666102124 26.149049533554354,-102.1188178 26.152923456807,-102.10091893897877 26.149049533554354,-102.0878160633126 26.1384657784035,-102.08653386170432 26.13460053338312&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-102&lt;/span&gt;.15271126918533 26.129748541924556,-102.14764154329896 26.12984171790165,-102.14755705371499 26.13408877990621,-102.14815585687757 26.13514319847587,-102.13090187683702 26.13494986238747,-102.10652676348738 26.13471792646315,-102.0865197014023 26.13455784661961,-102.08302007795753 26.1240081,-102.0878160633126 26.109550421596495,-102.10091893897877 26.09896666644564,-102.1188178 26.09509274319299,-102.12671666102124 26.09896666644564,-102.14981952668641 26.109550421596495,-102.15461552204248 26.1240081,-102.15271126918533 26.129748541924556&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;OMG, what it is? Don’t cry please, we only changed the last expression replacing [0-9] by [-+]?\d+(.\d+)?$, that’s it.&lt;/p&gt;

&lt;p&gt;If you like this post please pay me with a click on the ads :)&lt;/p&gt;</content><author><name></name></author><summary type="html">Let’s work hard We are going to extract coordinates from a string like this COORDINATES(((1 2,3 4)),((5 6,7 8,9 10)))</summary></entry></feed>